from rest_assured.testcases import ReadWriteRESTAPITestCaseMixin, BaseRESTAPITestCase
from rest_framework.test import APITestCase
from VMA import factories
from rest_framework import status
import string

# Create your tests here.

class UserAPITestCase(ReadWriteRESTAPITestCaseMixin, BaseRESTAPITestCase):

    base_name = 'rest_framework:user'  # this is the base_name generated by the DefaultRouter
    factory_class = factories.UserFactory
    response_lookup_field = 'username'
    attributes_to_check = ['username']
    update_data = {'firstName': 'Updated', }

    def setUp(self):
        self.user = self.get_object(self.get_factory_class())
        self.client.force_authenticate(self.user)

        # create the object
        self.object = self.user

    def get_create_data(self):
        data = {'username': 'test',
                   'password': 'Password!',
                   'firstName': 'Test',
                   'lastName': 'User',
                   'email': 'example@mail.com',
                   'company': factories.CompanyFactory.create().pk,
                   'isAdmin': True, }
        return data


class FilterTest(APITestCase):
    # create 2 users, then get only the second one with filtering.
    def testFilter(self):
        user1 = factories.UserFactory.create()
        user2 = factories.UserFactory.create()
        self.client.force_authenticate(user1)

        response = self.client.get('/accounts/?username='+user2.username)

        self.assertEqual(response.status_code, status.HTTP_200_OK)
        self.assertEqual(response.content.decode().split(',')[0].split(':')[1][1:-1], user2.username)  # the response comes in wierd, so it's parsed for the name here.
