import drf_jwt_2fa
from django.urls import path, include
from rest_framework_jwt.views import *

from VMA import views
from projectB.authentication import CustAuthForm
from django.conf.urls import url
from django.contrib.auth import views as auth_views
from rest_framework.routers import DefaultRouter
from drf_jwt_2fa import urls as fa2urls
from drf_jwt_2fa import views as fa2views
from VMA.views import FileUploadView, DashboardView_Resolved, DashboardView_Unresolved

# define router and add viewSets to it
router = DefaultRouter()
router.register(r'accounts', views.UserViewSet, 'user')
router.register(r'vulnerability', views.VulnerabilityViewSet, basename='vulnerability')
router.register(r'assets', views.AssetViewSet, basename='assets')
router.register(r'company', views.CompanyViewSet, basename='company')
router.register(r'permissions', views.PermViewSet, basename='permissions')
router.register(r'services', views.ServicesViewSet, basename='services')
router.register(r'reports', views.ReportViewSet, basename="reports")

# Uncomment the 2fa url for 2FA to work. The way it works is a bit esoteric, so read this
# https://pypi.org/project/drf-jwt-2fa/ and check the 2fa url.py for the urls.
app_name = 'rest_framework'  # Needed to make the /login url work
urlpatterns = [
    path('', include(router.urls)), # All urls auto generated by router
    url(r'^login/$', views.CustomLoginView.as_view(template_name='rest_framework/login.html',authentication_form=CustAuthForm), name='login'),
    url(r'^logout/$', auth_views.LogoutView.as_view(), name='logout'),

    url('^get-code/', fa2views.obtain_code_token, name='get-code'),
    url('^auth/', fa2views.obtain_auth_token, name='get-auth'),
    url('^refresh/', fa2views.refresh_auth_token, name='refresh'),
    url('^verify/', fa2views.verify_auth_token, name='verify'),

    # path(r'auth/', drf_jwt_2fa.obtain_jwt_token, name='auth'),
    # path(r'refresh/', refresh_jwt_token, name='refresh'),
    # path(r'verify/', verify_jwt_token, name='verify'),


    url(r'^2fa/', include((fa2urls, '2fa'), namespace='2fa')),


   # ...
    # Renan's Code for XML Upload handler:
    # ...
    url(r'^upload/(?P<filename>[^/]+)$', FileUploadView.as_view()),
    # path('dashboard/', views.DashboardView.as_view()),
    url('^dashboard_unresolved/(?P<company_id>.+)/$', DashboardView_Unresolved.as_view()),
    url('^dashboard_resolved/(?P<company_id>.+)/$', DashboardView_Resolved.as_view()),
]
