"""
Django settings for projectB project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import datetime
import subprocess
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'agk_)2_zrlmue2$(ydmtt4#=5&@j0@#1f8vf6j=+pl1$sc+yz2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
'''
try:
    networks = subprocess.check_output(['ifconfig']).split(b'\n')
    env = 1
except FileNotFoundError:
    networks = subprocess.check_output(['ipconfig']).split(b'\r\n\r\n')
    env = 2
for net in networks:
    try:
        if env == 2:
            ips = net.split(b'\r\n')
            for line in ips:
                if 'IPv4 Address' in line.decode():
                    ip = line.decode().split(': ')[1]
                    ALLOWED_HOSTS.append(ip)
        elif env == 1:  # Linux
            ip = net.strip().split(b'inet addr:')[1].strip().split(b' ')[0]
            ALLOWED_HOSTS.append(ip.decode())
    except IndexError:
        continue
'''
CORS_ORIGIN_ALLOW_ALL = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.postgres',
    'django.contrib.staticfiles',
    'rest_assured',
    'factory',
    'rest_framework',
    'rest_framework.authtoken',
    'drf_jwt_2fa',
    'corsheaders',
    'sslserver',

    # Our application
    'VMA.apps.VmaConfig',
    'projectB',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # Allows interaction with frontend by disabling cross site forgery stuff
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'projectB.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.static',
                'django.template.context_processors.media',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projectB.wsgi.application'

AUTH_USER_MODEL = 'VMA.User'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'VMADB',
        'USER': 'vmaclientman',
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'HOST': 'db',
        'PORT': '5432',
    }
}
if os.environ.get('testSSL') is not None:
    SECURE_SSL_REDIRECT = False
else:
    SECURE_SSL_REDIRECT = True

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Adding the file upload handlers. This handler will store the files either in memory or disk temporarily
# The storing will depend on the size of the file.
FILE_UPLOAD_HANDLERS = [
    # "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler",
    ]


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
         'projectB.permissions.FuncPermission',
    ),

# Uncomment only Jwt2faAuthentication for 2FA
# It has to be the only one enabled for it to work.
    'DEFAULT_AUTHENTICATION_CLASSES': (
        #'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'drf_jwt_2fa.authentication.Jwt2faAuthentication',
        #'projectB.authentication.CustAuthentication',
        'rest_framework.authentication.SessionAuthentication',
     ),

}

# AUTHENTICATION_BACKENDS = ['projectB.authentication.CustAuthentication']

JWT_AUTH = {
    'JWT_ALLOW_REFRESH': True,
    'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=1),
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),
    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
    'JWT_VERIFY': True,
}

CODE_EXPIRATION_TIME = datetime.timedelta(minutes=30)

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

EMAIL_BACKEND = 'django_mailjet.backends.MailjetBackend'
EMAIL_USE_SSL = True
EMAIL_PORT = 465

EMAIL_HOST = 'in-v3.mailjet.com'
EMAIL_HOST_USER = 'VMAAuthenticator@gmail.com'
EMAIL_HOST_PASSWORD = 'TeamBBestTeam'
DEFAULT_FROM_EMAIL = 'VMAAuthenticator@gmail.com'

MAILJET_API_KEY = '7a71ce7605db36682b20f15a97760b44'
MAILJET_API_SECRET = 'ec51e9e440ed50572c7519a9e1ffa8bd'

SILENCED_SYSTEM_CHECKS = ['postgres.E003']